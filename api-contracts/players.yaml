swagger: '2.0'
info:
  title: Player
  description: Player management
  version: 01.00.00
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/players':
    get:
      operationId: getPlayers
      description: Returns a paginated set of all Players
      parameters:
        - name: page[limit]
          in: query
          description: Limit of players to return from the collection
          type: integer
          required: false
        - name: page[offset]
          in: query
          description: Offest into the collection
          type: integer
          required: false
      responses:
        200:
          description: A collection of Users
          schema:
            $ref: '#/definitions/players'
        400:
          description: Invalid input supplied
          schema:
            type: object
            properties:
              msg:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        text:
                          type: string
                        object:
                          type: string
        401:
          description: Authorization required
        404:
          description: Insufficient access to view the resource or the resource does not exist
  '/players/{playerId}':
    get:
      operationId: getPlayer
      description: Returns Player
      parameters:
        - name: playerId
          in: path
          description: Player ID
          required: true
          type: string
      responses:
        200:
          description: A Player
          schema:
            $ref: '#/definitions/player'
        400:
          description: Invalid input supplied
          schema:
            type: object
            properties:
              msg:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        text:
                          type: string
                        object:
                          type: string
        401:
          description: Authorization required
        404:
          description: Insufficient access to view the resource or the resource does not exist
    put:
      operationId: updatePlayer
      description: Update Player
      parameters:
        - name: playerId
          in: path
          description: Player ID
          required: true
          type: string
        - name: If-Match
          in: header
          description: Provide an E-Tag for concurrency checking
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/playerBody'
      responses:
        200:
          description: Player successfully updated
          schema:
            $ref: '#/definitions/player'
        400:
          description: Invalid input supplied
          schema:
            type: object
            properties:
              msg:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        text:
                          type: string
                        object:
                          type: string
        401:
          description: Authorization required
        404:
          description: Insufficient access to view the resource or the resource does not exist
        409:
          description: The request was not processed because of a concurrency issue, most commonly the 'If-Match' header was required but not provided
        412:
          description: The request was not processed because a 'If-Match' request header condition was not met
definitions:
  playerSelfLink:
    type: object
    properties:
      href:
        type: string
        default: "/players/{playerId}"
  playerTemplateLink:
    type: object
    properties:
      href:
        type: string
        default: "/players/resourcetemplate"
  playerLinks:
    type: object
    properties:
      self:
        $ref: '#/definitions/playerSelfLink'
  players:
    type: object
    title: Players
    description: Representation for a collection of Players
    properties:
      data:
        type: object
        properties:
          players:
            type: array
            items:
              type: object
              allOf:
                - $ref: '#/definitions/playerAttributes'
                - properties:
                    _links:
                      $ref: '#/definitions/playerLinks'
      meta:
        type: object
        description: The metadata for the resource
        allOf:
          - $ref: '#/definitions/playerMetaData'
          - properties:
              player.results:
                type: object
                properties:
                  items:
                    type: number
                  total:
                    type: number
              links:
                type: object
                properties:
                  self:
                    type: object
                    properties:
                      href:
                        type: string
                        default: "/players"
                  first:
                    type: object
                    properties:
                      href:
                        type: string
                  prev:
                    type: object
                    properties:
                      href:
                        type: string
                  next:
                    type: object
                    properties:
                      href:
                        type: string
                  last:
                    type: object
                    properties:
                      href:
                        type: string
                  createPlayer:
                    type: object
                    properties:
                      href:
                        type: string
                        default: "/players"
                  playerTemplate:
                    $ref: '#/definitions/playerTemplateLink'
  player:
    type: object
    title: Player
    description: Representation for a player
    properties:
      data:
        type: object
        properties:
          player:
            type: object
            allOf:
              - $ref: '#/definitions/playerAttributes'
              - properties:
                  _links:
                    $ref: '#/definitions/playerLinks'
      meta:
        type: object
        description: The metadata for the resource
        allOf:
          - $ref: '#/definitions/playerMetaData'
          - properties:
              player.results:
                type: object
                properties:
                  items:
                    type: number
                  total:
                    type: number
              links:
                type: object
                properties:
                  self:
                    type: object
                    properties:
                      href:
                        type: string
                        default: "/players"
  playerBody:
    type: object
    properties:
      user:
        $ref: '#/definitions/playerAttributes'
  playerAttributes:
    properties:
      playerId:
        type: string
        format: uuid
      name:
        type: string
      dci:
        type: string
  playerMetaData:
    type: object
    properties:
      player.id:
        type: object
        properties:
          hidden:
            type: boolean
            default: true
          disabled:
            type: boolean
            default: true
  